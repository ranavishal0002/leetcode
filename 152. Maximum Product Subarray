#  Given an integer array nums, find a subarray that has the largest product, and return the product. 
#   The test cases are generated so that the answer will fit in a 32-bit integer.


################################################################################## SOLUTION ####################################################################

class Solution {
    public int maxProduct(int[] nums) {
        if (nums.length == 1) {
            return nums[0];
        }

       int maxProduct = nums[0];
        int minProduct = nums[0];
        int result = nums[0];

        for (int i = 1; i < nums.length; i++) {
            int tempMaxProduct = Math.max(nums[i], Math.max(maxProduct * nums[i], minProduct * nums[i]));
            int tempMinProduct = Math.min(nums[i], Math.min(maxProduct * nums[i], minProduct * nums[i]));

            maxProduct = tempMaxProduct;
            minProduct = tempMinProduct;

            result = Math.max(result, maxProduct);
        }

        return result;
    }
}
