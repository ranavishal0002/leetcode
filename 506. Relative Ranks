# You are given an integer array score of size n, where score[i] is the score of the ith athlete in a competition. All the scores are guaranteed to be unique.The athletes are placed based on their
# scores, where the 1st place athlete has the highest score, the 2nd place athlete has the 2nd highest score, and so on. The placement of each athlete determines their rank:

#The 1st place athlete's rank is "Gold Medal".
#The 2nd place athlete's rank is "Silver Medal".
#The 3rd place athlete's rank is "Bronze Medal".
#For the 4th place to the nth place athlete, their rank is their placement number (i.e., the xth place athlete's rank is "x").
#Return an array answer of size n where answer[i] is the rank of the ith athlete.




############################################################################### SOLUTION ########################################################################################


import java.util.Arrays;
import java.util.HashMap;

class Solution {
    public String[] findRelativeRanks(int[] score) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int index = 0; index < score.length; index++) {
            map.put(score[index], index);
        }
        Arrays.sort(score);
        int n = score.length;
        String[] ans = new String[score.length];
        
        for (int i = 0; i < score.length; i++) {
            int ind = map.get(score[i]);
            if (i == n - 1) ans[ind] = "Gold Medal";
            else if (i == n - 2) ans[ind] = "Silver Medal";
            else if (i == n - 3) ans[ind] = "Bronze Medal";
            else ans[ind] = String.valueOf(n - i);
        }
        return ans;
    }
}
