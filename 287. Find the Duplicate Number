#############################  287. Find the Duplicate Number ##################################3

Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.





class Solution {
    public int findDuplicate(int[] nums) {
       int left = 0; // Minimum possible value in the array
       int right = nums.length - 1; // Maximum possible value in the array

       while (left < right) {
            int mid = left + (right - left) / 2;
            int count = 0;
              // count no. of elements less then mid
           for (int i = 0; i < nums.length; i++) {
           if (nums[i] <= mid) {
                count++;
              }
           }
            // Adjust the search range based on the count
            if (count > mid) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }

        return left; // 'left' holds the duplicate element
    }
}
