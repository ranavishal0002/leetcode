# Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size groupSize, and consists of groupSize consecutive cards.
# Given an integer array hand where hand[i] is the value written on the ith card and an integer groupSize, return true if she can rearrange the cards, or false otherwise.



######################################## SOLUTION #########################################################



class Solution {
    public boolean isNStraightHand(int[] hand, int groupSize) {        
        
        if (hand.length%groupSize!=0){
            return false;
        }

        Arrays.sort(hand);

       // count the frequencny of each element
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int num: hand){
                map.put(num, map.getOrDefault(num, 0)+1);
        }

        //  form group

        for (int num : hand){
            if(map.get(num)==0){
                continue; //  skip card if already used
            }

           for (int i = 0; i < groupSize; i++) {
                int currentCard = num + i;
                if (map.getOrDefault(currentCard, 0) == 0) {
                    return false; // If the required card is not available, return false
                }
                map.put(currentCard, map.get(currentCard) - 1); // Decrease the count of the card
            }
        }

        return true; // If all groups are successfully formed, return true
        
      
    }
}
